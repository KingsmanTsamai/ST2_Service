#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ST2_Service
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ST2")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCause(Cause instance);
    partial void UpdateCause(Cause instance);
    partial void DeleteCause(Cause instance);
    partial void InsertDonation(Donation instance);
    partial void UpdateDonation(Donation instance);
    partial void DeleteDonation(Donation instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ST2ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cause> Causes
		{
			get
			{
				return this.GetTable<Cause>();
			}
		}
		
		public System.Data.Linq.Table<Donation> Donations
		{
			get
			{
				return this.GetTable<Donation>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cause")]
	public partial class Cause : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CauseName;
		
		private string _CauseDescription;
		
		private decimal _CuaseDonations;
		
		private decimal _CauseRequiredMoney;
		
		private string _CauseImg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCauseNameChanging(string value);
    partial void OnCauseNameChanged();
    partial void OnCauseDescriptionChanging(string value);
    partial void OnCauseDescriptionChanged();
    partial void OnCuaseDonationsChanging(decimal value);
    partial void OnCuaseDonationsChanged();
    partial void OnCauseRequiredMoneyChanging(decimal value);
    partial void OnCauseRequiredMoneyChanged();
    partial void OnCauseImgChanging(string value);
    partial void OnCauseImgChanged();
    #endregion
		
		public Cause()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CauseName
		{
			get
			{
				return this._CauseName;
			}
			set
			{
				if ((this._CauseName != value))
				{
					this.OnCauseNameChanging(value);
					this.SendPropertyChanging();
					this._CauseName = value;
					this.SendPropertyChanged("CauseName");
					this.OnCauseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseDescription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CauseDescription
		{
			get
			{
				return this._CauseDescription;
			}
			set
			{
				if ((this._CauseDescription != value))
				{
					this.OnCauseDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CauseDescription = value;
					this.SendPropertyChanged("CauseDescription");
					this.OnCauseDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CuaseDonations", DbType="Money NOT NULL")]
		public decimal CuaseDonations
		{
			get
			{
				return this._CuaseDonations;
			}
			set
			{
				if ((this._CuaseDonations != value))
				{
					this.OnCuaseDonationsChanging(value);
					this.SendPropertyChanging();
					this._CuaseDonations = value;
					this.SendPropertyChanged("CuaseDonations");
					this.OnCuaseDonationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseRequiredMoney", DbType="Money NOT NULL")]
		public decimal CauseRequiredMoney
		{
			get
			{
				return this._CauseRequiredMoney;
			}
			set
			{
				if ((this._CauseRequiredMoney != value))
				{
					this.OnCauseRequiredMoneyChanging(value);
					this.SendPropertyChanging();
					this._CauseRequiredMoney = value;
					this.SendPropertyChanged("CauseRequiredMoney");
					this.OnCauseRequiredMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseImg", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CauseImg
		{
			get
			{
				return this._CauseImg;
			}
			set
			{
				if ((this._CauseImg != value))
				{
					this.OnCauseImgChanging(value);
					this.SendPropertyChanging();
					this._CauseImg = value;
					this.SendPropertyChanged("CauseImg");
					this.OnCauseImgChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Donation")]
	public partial class Donation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DonerName;
		
		private string _DonerEmail;
		
		private int _SelectedCauseId;
		
		private decimal _DonationAmout;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDonerNameChanging(string value);
    partial void OnDonerNameChanged();
    partial void OnDonerEmailChanging(string value);
    partial void OnDonerEmailChanged();
    partial void OnSelectedCauseIdChanging(int value);
    partial void OnSelectedCauseIdChanged();
    partial void OnDonationAmoutChanging(decimal value);
    partial void OnDonationAmoutChanged();
    #endregion
		
		public Donation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonerName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DonerName
		{
			get
			{
				return this._DonerName;
			}
			set
			{
				if ((this._DonerName != value))
				{
					this.OnDonerNameChanging(value);
					this.SendPropertyChanging();
					this._DonerName = value;
					this.SendPropertyChanged("DonerName");
					this.OnDonerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonerEmail", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string DonerEmail
		{
			get
			{
				return this._DonerEmail;
			}
			set
			{
				if ((this._DonerEmail != value))
				{
					this.OnDonerEmailChanging(value);
					this.SendPropertyChanging();
					this._DonerEmail = value;
					this.SendPropertyChanged("DonerEmail");
					this.OnDonerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectedCauseId", DbType="Int NOT NULL")]
		public int SelectedCauseId
		{
			get
			{
				return this._SelectedCauseId;
			}
			set
			{
				if ((this._SelectedCauseId != value))
				{
					this.OnSelectedCauseIdChanging(value);
					this.SendPropertyChanging();
					this._SelectedCauseId = value;
					this.SendPropertyChanged("SelectedCauseId");
					this.OnSelectedCauseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationAmout", DbType="Money NOT NULL")]
		public decimal DonationAmout
		{
			get
			{
				return this._DonationAmout;
			}
			set
			{
				if ((this._DonationAmout != value))
				{
					this.OnDonationAmoutChanging(value);
					this.SendPropertyChanging();
					this._DonationAmout = value;
					this.SendPropertyChanged("DonationAmout");
					this.OnDonationAmoutChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Surname;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Client()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
